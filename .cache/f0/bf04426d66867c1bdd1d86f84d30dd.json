{"id":"game/Carrot.js","dependencies":[{"name":"/Users/admin/projects/phaser_1/package.json","includedInParent":true,"mtime":1606321814725},{"name":"phaser","loc":{"line":1,"column":19},"parent":"/Users/admin/projects/phaser_1/src/game/Carrot.js","resolved":"/Users/admin/projects/phaser_1/node_modules/phaser/dist/phaser.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _phaser = _interopRequireDefault(require(\"phaser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nvar Carrot = /*#__PURE__*/function (_Phaser$Physics$Arcad) {\n  _inherits(Carrot, _Phaser$Physics$Arcad);\n\n  var _super = _createSuper(Carrot);\n\n  function Carrot(scene, x, y, texture) {\n    var _this;\n\n    _classCallCheck(this, Carrot);\n\n    _this = _super.call(this, scene, x, y, texture);\n\n    _this.setScale(0.5);\n\n    return _this;\n  }\n\n  return Carrot;\n}(_phaser.default.Physics.Arcade.Sprite);\n\nexports.default = Carrot;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"game/Carrot.js","original":{"line":1,"column":0}},{"name":"Carrot","generated":{"line":30,"column":4},"source":"game/Carrot.js","original":{"line":3,"column":21}},{"generated":{"line":35,"column":0},"source":"game/Carrot.js","original":{"line":6,"column":4}},{"name":"scene","generated":{"line":35,"column":18},"source":"game/Carrot.js","original":{"line":6,"column":17}},{"generated":{"line":35,"column":23},"source":"game/Carrot.js","original":{"line":6,"column":4}},{"name":"x","generated":{"line":35,"column":25},"source":"game/Carrot.js","original":{"line":6,"column":24}},{"generated":{"line":35,"column":26},"source":"game/Carrot.js","original":{"line":6,"column":4}},{"name":"y","generated":{"line":35,"column":28},"source":"game/Carrot.js","original":{"line":6,"column":27}},{"generated":{"line":35,"column":29},"source":"game/Carrot.js","original":{"line":6,"column":4}},{"name":"texture","generated":{"line":35,"column":31},"source":"game/Carrot.js","original":{"line":6,"column":30}},{"generated":{"line":35,"column":38},"source":"game/Carrot.js","original":{"line":6,"column":4}},{"generated":{"line":35,"column":40},"source":"game/Carrot.js","original":{"line":6,"column":39}},{"generated":{"line":36,"column":0},"source":"game/Carrot.js","original":{"line":6,"column":39}},{"generated":{"line":38,"column":0},"source":"game/Carrot.js","original":{"line":6,"column":39}},{"generated":{"line":40,"column":0},"source":"game/Carrot.js","original":{"line":7,"column":8}},{"name":"scene","generated":{"line":40,"column":30},"source":"game/Carrot.js","original":{"line":7,"column":14}},{"generated":{"line":40,"column":35},"source":"game/Carrot.js","original":{"line":7,"column":8}},{"name":"x","generated":{"line":40,"column":37},"source":"game/Carrot.js","original":{"line":7,"column":21}},{"generated":{"line":40,"column":38},"source":"game/Carrot.js","original":{"line":7,"column":8}},{"name":"y","generated":{"line":40,"column":40},"source":"game/Carrot.js","original":{"line":7,"column":24}},{"generated":{"line":40,"column":41},"source":"game/Carrot.js","original":{"line":7,"column":8}},{"name":"texture","generated":{"line":40,"column":43},"source":"game/Carrot.js","original":{"line":7,"column":27}},{"generated":{"line":40,"column":50},"source":"game/Carrot.js","original":{"line":7,"column":8}},{"generated":{"line":42,"column":0},"source":"game/Carrot.js","original":{"line":8,"column":8}},{"name":"setScale","generated":{"line":42,"column":10},"source":"game/Carrot.js","original":{"line":8,"column":13}},{"generated":{"line":42,"column":18},"source":"game/Carrot.js","original":{"line":8,"column":8}},{"generated":{"line":42,"column":19},"source":"game/Carrot.js","original":{"line":8,"column":22}},{"generated":{"line":42,"column":22},"source":"game/Carrot.js","original":{"line":8,"column":8}},{"generated":{"line":44,"column":0},"source":"game/Carrot.js","original":{"line":6,"column":39}},{"generated":{"line":45,"column":0},"source":"game/Carrot.js","original":{"line":9,"column":5}},{"name":"Phaser","generated":{"line":48,"column":2},"source":"game/Carrot.js","original":{"line":3,"column":36}},{"name":"Physics","generated":{"line":48,"column":18},"source":"game/Carrot.js","original":{"line":3,"column":43}},{"generated":{"line":48,"column":25},"source":"game/Carrot.js","original":{"line":3,"column":36}},{"name":"Arcade","generated":{"line":48,"column":26},"source":"game/Carrot.js","original":{"line":3,"column":51}},{"generated":{"line":48,"column":32},"source":"game/Carrot.js","original":{"line":3,"column":36}},{"name":"Sprite","generated":{"line":48,"column":33},"source":"game/Carrot.js","original":{"line":3,"column":58}}],"sources":{"game/Carrot.js":"import Phaser from 'phaser'\n\nexport default class Carrot extends Phaser.Physics.Arcade.Sprite\n\n{\n    constructor (scene, x, y, texture) {\n        super(scene, x, y, texture);\n        this.setScale(0.5);\n    }\n}\n\n"},"lineCount":null}},"error":null,"hash":"b233706d0706a369448cbb281a5f5a1f","cacheData":{"env":{}}}